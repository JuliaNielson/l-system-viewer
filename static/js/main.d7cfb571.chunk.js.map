{"version":3,"sources":["logo.svg","Turtle/Turtle.js","components/ViewPane.js","components/SystemRuleInput.js","components/SystemRulePane.js","components/ControlPane.js","components/LSystemPane.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Turtle","props","state","lastX","lastY","facing","getPath","bind","degrees","Math","PI","rules","symbol","resultRule","find","rule","drawRule","ruleString","result","Path2D","this","moveTo","split","forEach","charr","nextType","findDrawRuleBySymbol","ruleState","symbolRules","newX","cos","getAsRadians","newY","sin","lineTo","setState","React","Component","ViewPane","turtle","updateCanvas","canvas","refs","ctx","getContext","fitToContainer","p","stroke","viewDiv","document","getElementById","width","offsetWidth","height","offsetHeight","className","id","ref","SystemRuleInput","ruleSelections","ruleType","push","key","value","type","index","onChange","handleChange","replacementRule","SystemRulePane","handleDrawSystem","formState","generateString","ruleIndex","formHandler","iterationsDropDown","ii","axiom","iterations","onClick","addRuleHandler","ControlPane","src","logo","alt","style","textAlign","LSystemPane","handleForm","editSymbolRule","counter","parseInt","resultString","workString","findReplacementRuleBySymbol","viewPane","e","persist","includes","target","prevState","changedRule","findRuleByIndex","newRules","splice","newRule","getNewRule","length","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7cfb571.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nclass Turtle extends React.Component{\r\n    constructor(props)\r\n    {   \r\n        super(props);\r\n        this.state = {lastX:300,lastY:300,facing:-90}\r\n        \r\n\r\n        this.getPath = this.getPath.bind(this);\r\n    }\r\n\r\n    getAsRadians(degrees){\r\n        return(degrees * Math.PI/180);\r\n    }\r\n\r\n    // getPath(){\r\n    //     let p = new Path2D();\r\n    //     p.moveTo(30, 30);\r\n    //     p.lineTo(200,200);\r\n    //     p.arc(200,200, 50, 0, Math.PI);\r\n    //     return p;\r\n    // }\r\n\r\n    findDrawRuleBySymbol(rules, symbol){\r\n        const resultRule = rules.find((rule)=>{return rule.symbol === symbol});\r\n        return resultRule ? resultRule.drawRule : \"\";\r\n    }\r\n\r\n    getPath(ruleString){\r\n        let result = new Path2D();\r\n        let facing = this.state.facing;\r\n        let lastX = this.state.lastX;\r\n        let lastY = this.state.lastY;\r\n        result.moveTo(300,300);\r\n        ruleString.split(\"\").forEach((charr) => {\r\n            let nextType = this.findDrawRuleBySymbol(this.props.ruleState.symbolRules, charr);\r\n            if(\"None\" === nextType){\r\n                //no-op\r\n            }\r\n            else if(\"AnglePos\" === nextType){\r\n                facing += 90;\r\n            }\r\n            else if(\"AngleNeg\" === nextType){\r\n                facing -= 90;\r\n            }\r\n            else if(\"Move\" === nextType){\r\n                let newX = lastX + (10 * Math.cos(this.getAsRadians(facing)));\r\n                let newY = lastY + (10 * Math.sin(this.getAsRadians(facing)));\r\n                result.lineTo(newX, newY);\r\n                lastX = newX;\r\n                lastY = newY;\r\n            }\r\n        this.setState({facing:facing, lastX:lastX, lastY:lastY});\r\n\r\n        });\r\n\r\n\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport default Turtle;","import React from 'react';\r\nimport '../App.css';\r\nimport Turtle from '../Turtle/Turtle';\r\n\r\nclass ViewPane extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.turtle = new Turtle(props);\r\n        this.updateCanvas = this.updateCanvas.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.updateCanvas(\"\");\r\n    }\r\n    updateCanvas(ruleString){\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        this.fitToContainer(canvas);\r\n        let p = this.turtle.getPath(ruleString);\r\n        ctx.stroke(p);\r\n    }\r\n\r\n    fitToContainer(canvas){\r\n        const viewDiv = document.getElementById(\"viewPane\");\r\n        canvas.width = viewDiv.offsetWidth;\r\n        canvas.height = viewDiv.offsetHeight;\r\n\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"View-pane\" id=\"viewPane\">\r\n                {this.props.ruleString}\r\n                <br/>\r\n                <canvas ref=\"canvas\">\r\n                Your browser does not support the HTML5 canvas tag or you're looking at a search engine preview or something.\r\n                </canvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewPane;\r\n","import React, {Component} from 'react';\r\n\r\nclass SystemRuleInput extends Component{\r\n\r\n    render(){\r\n        let ruleTypes =[\"Move\", \"AnglePos\", \"AngleNeg\", \"None\"]\r\n        let ruleSelections = [];\r\n        ruleTypes.forEach((ruleType)=>{\r\n            ruleSelections.push(\r\n              <option key={ruleType} value={ruleType}>{ruleType}</option>  \r\n            );\r\n        });\r\n\r\n        return(\r\n            <tr>\r\n                <td>\r\n                    <input type=\"Text\" className=\"symbol\" id={this.props.index} value={this.props.rule.symbol} onChange = {this.props.handleChange}/>\r\n                </td>\r\n                <td>\r\n                    <input type=\"Text\" className=\"replacementRule\" id={this.props.index} value={this.props.rule.replacementRule} onChange = {this.props.handleChange}/>\r\n                </td>\r\n                <td>\r\n                    <select className=\"drawRule\" id={this.props.index} value={this.props.rule.drawRule}>\r\n                        {ruleSelections}\r\n                    </select>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SystemRuleInput;","import React, {Component} from 'react';\r\nimport SystemRuleInput from './SystemRuleInput';\r\n\r\nclass SystemRulePane extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.handleDrawSystem = this.handleDrawSystem.bind(this);\r\n    }\r\n\r\n    handleDrawSystem(){\r\n        const formState = this.props.ruleState;\r\n        this.props.generateString(formState);\r\n    }\r\n\r\n    render(){\r\n        const rules = [];\r\n        this.props.ruleState.symbolRules.forEach((rule)=>{\r\n            rules.push(\r\n                <SystemRuleInput \r\n                    key={rule.index} \r\n                    index={rule.ruleIndex} \r\n                    rule={rule} \r\n                    handleChange={this.props.formHandler}\r\n                />\r\n            );\r\n\r\n        });\r\n\r\n        const iterationsDropDown = [];\r\n        for (let ii = 1; ii <= 20; ii++) {\r\n            iterationsDropDown.push(\r\n                <option key={ii} value={ii}>{ii}</option>\r\n            );\r\n            \r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n            <table>\r\n                <tbody>                \r\n                    <tr>\r\n                        <td>Axiom</td>\r\n                        <td>Iterations</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"Text\" value={this.props.ruleState.axiom} className=\"axiom\" onChange={this.props.formHandler}/>\r\n                        </td>\r\n                        <td>\r\n                            <select value={this.props.ruleState.iterations} className=\"iterations\" onChange={this.props.formHandler}>\r\n                                {iterationsDropDown}\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Symbol\r\n                        </td>\r\n                        <td>\r\n                            Rule\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {rules}\r\n\r\n                    <tr>\r\n                        <td>\r\n                            <button onClick={this.props.addRuleHandler}>New Rule</button>\r\n                        </td>\r\n                        <td>\r\n                            <button onClick={this.handleDrawSystem}>Draw System</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n\r\n            </table>\r\n\r\n            \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SystemRulePane;","import React, {Component} from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\nimport SystemRulePane from './SystemRulePane';\r\n\r\nclass ControlPane extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"Control-pane\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p style={{ textAlign: 'center'}}>\r\n                Welcome to Nielson's Lindenmeyer System Viewer\r\n                </p>\r\n                <SystemRulePane \r\n                    generateString={this.props.generateString} \r\n                    ruleState={this.props.ruleState} \r\n                    formHandler={this.props.formHandler} \r\n                    addRuleHandler={this.props.addRuleHandler}\r\n                />\r\n                \r\n            </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ControlPane;\r\n","import React from 'react';\r\nimport ViewPane from './ViewPane';\r\nimport ControlPane from './ControlPane';\r\n\r\nclass LSystemPane extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ruleState: {\r\n                symbolRules: [{\r\n                    ruleIndex: 0,\r\n                    symbol: 'a',\r\n                    replacementRule:\"ebcdacadcbe\",\r\n                    drawRule:\"None\"\r\n                },{\r\n                    ruleIndex: 1,\r\n                    symbol: 'b',\r\n                    replacementRule:\"dacebcbecad\",\r\n                    drawRule:\"None\"\r\n                },{\r\n                    ruleIndex: 2,\r\n                    symbol: 'c',\r\n                    replacementRule:\"c\",\r\n                    drawRule:\"Move\"\r\n                },{\r\n                    ruleIndex: 3,\r\n                    symbol: 'd',\r\n                    replacementRule:\"d\",\r\n                    drawRule:\"AnglePos\"\r\n                },{\r\n                    ruleIndex: 4,\r\n                    symbol: 'e',\r\n                    replacementRule:\"e\",\r\n                    drawRule:\"AngleNeg\"\r\n                }],\r\n                axiom : \"a\",\r\n                iterations : 4\r\n            },\r\n            ruleString : \"\"\r\n        }\r\n        this.generateString = this.generateString.bind(this);\r\n        this.addRuleHandler = this.addRuleHandler.bind(this);\r\n        this.handleForm = this.handleForm.bind(this);\r\n        this.editSymbolRule = this.editSymbolRule.bind(this);\r\n    }\r\n\r\n    \r\n    \r\n    render(){\r\n        return (\r\n            <div className = \"app\">\r\n                <ControlPane \r\n                    generateString={this.generateString} \r\n                    ruleState={this.state.ruleState} \r\n                    formHandler={this.handleForm}\r\n                    addRuleHandler={this.addRuleHandler}\r\n                ></ControlPane>\r\n                <ViewPane ref=\"viewPane\"\r\n                    value={this.state.counter} \r\n                    ruleString={this.state.ruleString} \r\n                    ruleState={this.state.ruleState}\r\n                ></ViewPane>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateString(formState){\r\n        const rules = formState.symbolRules;\r\n        const axiom = formState.axiom;\r\n        const iterations = parseInt(formState.iterations);\r\n        let resultString = axiom;\r\n        for (let ii = 0; ii < iterations; ii++) {\r\n            let workString = \"\";\r\n            resultString.split(\"\").forEach(charr => {\r\n                \r\n                workString += this.findReplacementRuleBySymbol(rules, charr);\r\n            });\r\n            resultString = workString;\r\n        }\r\n\r\n        this.setState({\r\n            ruleString: resultString\r\n        });\r\n        this.refs.viewPane.updateCanvas(resultString);\r\n    }\r\n\r\n    findReplacementRuleBySymbol(rules, symbol){\r\n        const resultRule = rules.find((rule)=>{return rule.symbol === symbol});\r\n        return resultRule ? resultRule.replacementRule : symbol;\r\n    }\r\n    findRuleByIndex(rules, index){\r\n        const resultRule = rules.find((rule)=>{return rule.ruleIndex === index});\r\n        return resultRule;\r\n    }\r\n\r\n    handleForm(e){\r\n        e.persist();\r\n        if ([\"symbol\", \"replacementRule\", \"drawRule\"].includes(e.target.className)){\r\n            this.editSymbolRule(e);\r\n        }\r\n        else if([\"axiom\", \"iterations\"].includes(e.target.className)){\r\n            this.setState(prevState => ({\r\n                ruleState:{\r\n                    ...prevState.ruleState,\r\n                [e.target.className] : e.target.value\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    editSymbolRule(e){\r\n        let rules = [...this.state.ruleState.symbolRules];\r\n            let index = parseInt(e.target.id, 10);\r\n\r\n            let changedRule = this.findRuleByIndex(rules, index);\r\n            changedRule = {\r\n                ...changedRule,\r\n                [e.target.className]:e.target.value\r\n            }\r\n\r\n            let newRules = rules;\r\n            newRules.splice(index, 1, changedRule);\r\n            this.setState(prevState => ({\r\n                ruleState:{\r\n                    ...prevState.ruleState,\r\n                    symbolRules: newRules                    \r\n                }\r\n            }));\r\n    }\r\n\r\n    addRuleHandler(e){\r\n        let rules = this.state.ruleState.symbolRules;\r\n        let newRule = this.getNewRule(rules);\r\n        rules.push(newRule);\r\n\r\n        this.setState(prevState => ({\r\n            ruleState:{\r\n                ...prevState.ruleState,\r\n                    symbolRules : rules\r\n            }\r\n        }));\r\n    }\r\n\r\n    getNewRule(rules){\r\n        let nextIndex = rules.length;\r\n        return {\r\n            ruleIndex: nextIndex,\r\n            symbol: '',\r\n            replacementRule:\"\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default LSystemPane;\r\n","import React from 'react';\nimport LSystemPane from './components/LSystemPane';\n\nfunction App() {\n  return (\n    <LSystemPane/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}